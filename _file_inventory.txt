# ATI Oracle Engine ‚Äî Essentials Manifest
# Last Verified: 2025-07-07

### ‚úÖ Core Backend API & Upload System
/backend/main.py                  # Handles uploads, chunk detection, Mongo test
/backend/utils/auth.py
/backend/utils/logger.py
/backend/utils/mongo.py
/backend/utils/file_utils.py
/backend/routes/*.py              # roles, metrics, log, pipeline, final_fetch
/backend/start.sh
/backend/requirements.txt

### üîÅ Rotor Engine Core
/core/boot.py                     # +BOOT: trigger rebuild ‚Üí code_red ‚Üí spin_up
/core/code_red.py                 # +CODE-RED: offload /upload via chunker
/core/spin_up.py                  # +SPIN-UP: pull GCS, restore, chunk large files
/core/spin_down.py                # +SPIN-DOWN: zip and GCS upload
/core/saveall.py                  # +SAVEALL: commit to GitHub + Mongo + GCS
/core/rotor_fusion.py            # SHA, Mongo, GCS, verify loop
/core/rotor_overlay.py           # Logging utility
/core/cloud_stream_relay.py      # Uploads files to GCS
/core/log_compression.py         # Gzips overlay.log
/core/fetch_secrets_from_mongo.py

### üîê MongoDB Storage Logic
/core/mongo_safe_upload_v2.py     # Uploads full or chunked to Mongo
/core/fusion_restore_v2.py        # Rebuilds from MongoDB chunks

### üß© Rotor-Native Chunking System
/core/rotor_chunk_and_stream.py   # Splits + uploads large files to GCS
/core/manifest_rebuilder.py       # Reassembles chunks from manifest
~/Soap/rebuilds/                  # Output of rebuilt files

### üß† AI SOP System
/core/vectorizer.py               # Embeds via OpenAI, Gemini, Ollama
/core/chunking.py                 # Breaks text into chunks
/core/text_extract.py             # Handles txt, pdf, docx
/core/mongo_vectors.py            # Stores SOP chunks to Mongo
/core/arbiter_phase.py            # Conflict resolver
/core/arbiter_output_test.py
/core/soap_phase.py

### üîê Secrets (excluded from Git)
/secrets/openai.key
/secrets/gemini.key
/secrets/gcs-creds.json
/secrets/mongo-creds.json

### üåé Config & Logs
/.env                             # Contains MONGO_URI and API_TOKEN
/_file_inventory.txt              # This file (essentials manifest)
/logs/rotor_overlay.log
/upload/                          # Upload staging dir
/overlay/                         # Working rotor folder
